name: Build Enhanced API Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod tidy
    
    - name: Build Linux AMD64
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w -X main.version=v1.0.0-enhanced-$(date +%Y%m%d)" -o x-ui-linux
    
    - name: Build Windows AMD64
      env:
        GOOS: windows
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w -X main.version=v1.0.0-enhanced-$(date +%Y%m%d)" -o x-ui-windows.exe
    
    - name: Prepare release files
      run: |
        mkdir -p release
        
        # Linux release
        cp x-ui-linux release/
        chmod +x release/x-ui-linux
        
        # Windows release  
        cp x-ui-windows.exe release/
        
        # Copy web resources
        if [ -d "web" ]; then
          cp -r web release/
        fi
        
        # Copy scripts
        if [ -f "x-ui.sh" ]; then
          cp x-ui.sh release/
        fi
        
        # Create version info
        echo "version=v1.0.0-enhanced-$(date +%Y%m%d)" > release/VERSION
        echo "build_time=$(date)" >> release/VERSION
        echo "build_platform=github-actions" >> release/VERSION
        echo "commit_hash=${{ github.sha }}" >> release/VERSION
        
        # Create deployment guide
        cat > release/DEPLOY.md << 'EOF'
        # Enhanced API Deployment Guide
        
        ## Linux Deployment
        
        ### Quick Deploy
        ```bash
        # Download and run deployment script
        bash <(curl -Ls https://raw.githubusercontent.com/WCOJBK/x-ui-api-main/main/deploy_from_github_release.sh)
        ```
        
        ### Manual Deploy
        ```bash
        # 1. Stop service
        systemctl stop x-ui
        
        # 2. Backup data
        cp /usr/local/x-ui/x-ui.db /tmp/x-ui.db.backup
        
        # 3. Copy files
        cp x-ui-linux /usr/local/x-ui/x-ui
        chmod +x /usr/local/x-ui/x-ui
        cp -r web /usr/local/x-ui/
        
        # 4. Restore data
        cp /tmp/x-ui.db.backup /usr/local/x-ui/x-ui.db
        
        # 5. Start service
        systemctl start x-ui
        ```
        
        ## Windows Testing
        
        ```cmd
        x-ui-windows.exe run
        ```
        
        Access: http://localhost:2053
        EOF
    
    - name: Create Linux archive
      run: |
        cd release
        tar -czf ../x-ui-enhanced-linux-amd64.tar.gz x-ui-linux web/ VERSION DEPLOY.md x-ui.sh 2>/dev/null || tar -czf ../x-ui-enhanced-linux-amd64.tar.gz x-ui-linux VERSION DEPLOY.md
    
    - name: Create Windows archive
      run: |
        cd release
        zip -r ../x-ui-enhanced-windows-amd64.zip x-ui-windows.exe web/ VERSION DEPLOY.md 2>/dev/null || zip -r ../x-ui-enhanced-windows-amd64.zip x-ui-windows.exe VERSION DEPLOY.md
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v3
      with:
        name: x-ui-enhanced-linux-amd64
        path: |
          x-ui-enhanced-linux-amd64.tar.gz
          release/x-ui-linux
          release/VERSION
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: x-ui-enhanced-windows-amd64
        path: |
          x-ui-enhanced-windows-amd64.zip
          release/x-ui-windows.exe
          release/VERSION
    
    - name: Get short SHA
      id: vars
      run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ steps.vars.outputs.short_sha }}
        name: Enhanced API Build ${{ steps.vars.outputs.short_sha }}
        body: |
          ðŸš€ **Enhanced API Automatic Build**
          
          **Build Info:**
          - Commit: ${{ github.sha }}
          - Date: $(date)
          - Go Version: 1.23.4
          
          **Downloads:**
          - `x-ui-enhanced-linux-amd64.tar.gz` - Linux AMD64 version
          - `x-ui-enhanced-windows-amd64.zip` - Windows AMD64 version
          
          **Quick Deploy on Linux:**
          ```bash
          bash <(curl -Ls https://raw.githubusercontent.com/WCOJBK/x-ui-api-main/main/deploy_from_github_release.sh)
          ```
          
          **Features:**
          âœ… Enhanced API with 20+ endpoints
          âœ… Native 3X-UI interface  
          âœ… Automatic backup and recovery
          âœ… Cross-platform support
        files: |
          x-ui-enhanced-linux-amd64.tar.gz
          x-ui-enhanced-windows-amd64.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
