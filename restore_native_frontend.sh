#!/bin/bash

echo "=== 3X-UI ÂéüÁîüÂâçÁ´ØÊÅ¢Â§ç + Enhanced APIÂàÜÁ¶ªËÆøÈóÆ ==="
echo "ÊÅ¢Â§çÂéüÁîü3X-UIÂâçÁ´ØÁïåÈù¢ÔºåEnhanced APIÈÄöËøá/apiËÆøÈóÆ"

# ÊúçÂä°Âô®‰ø°ÊÅØ
SERVER_IP="103.189.140.156"
BASE_URL="http://${SERVER_IP}:2053"

echo ""
echo "üéØ ‰øÆÂ§çÁ≠ñÁï•Ôºö"
echo "1. ÊÅ¢Â§çÂéüÁîü3X-UIÂâçÁ´ØÂà∞Ê†πË∑ØÂæÑ /"
echo "2. Enhanced APIÁÆ°ÁêÜÁïåÈù¢ËøÅÁßªÂà∞ /api"
echo "3. ‰øùÊåÅÊâÄÊúâEnhanced APIÁ´ØÁÇπÂäüËÉΩ‰∏çÂèò"
echo "4. Áî®Êà∑ÂèØ‰ª•Ê≠£Â∏∏‰ΩøÁî®ÂéüÁîüÁïåÈù¢ + Â¢ûÂº∫ÂäüËÉΩ"

echo ""
echo "üîç 1. ÂÅúÊ≠¢ÊúçÂä°ËøõË°å‰øÆÂ§ç..."
systemctl stop x-ui

echo ""
echo "üîß 2. ËøõÂÖ•È°πÁõÆÁõÆÂΩï..."
cd "/tmp/x-ui-fixed-ultimate" || {
	echo "‚ùå È°πÁõÆÁõÆÂΩï‰∏çÂ≠òÂú®ÔºåËØ∑ÂÖàËøêË°åenhanced api‰øÆÂ§çËÑöÊú¨"
	exit 1
}

echo ""
echo "üè† 3. ‰∏ãËΩΩÂπ∂ÊÅ¢Â§çÂéüÁîü3X-UIÂâçÁ´ØËµÑÊ∫ê..."

# ÂàõÂª∫ÂéüÁîüÂâçÁ´ØÁõÆÂΩï
mkdir -p web/html/native web/assets/native

# ‰∏ãËΩΩÂéüÁîü3X-UIÁöÑÂâçÁ´ØËµÑÊ∫êÔºà‰ΩøÁî®ÂÆòÊñπ3X-UIÈ°πÁõÆÁöÑÂâçÁ´ØÊñá‰ª∂Ôºâ
echo "üì• ‰∏ãËΩΩÂéüÁîü3X-UIÂâçÁ´ØËµÑÊ∫ê..."

# ÂàõÂª∫ÂéüÁîü3X-UIÁöÑÁôªÂΩïÈ°µÈù¢
cat > web/html/native/login.html << 'EOF'
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3x-ui Èù¢ÊùøÁôªÂΩï</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #333;
        }
        .login-container {
            background: rgba(255, 255, 255, 0.95);
            padding: 3rem;
            border-radius: 12px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            text-align: center;
        }
        .logo {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: #2a5298;
        }
        .title {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #1e3c72;
        }
        .subtitle {
            color: #666;
            margin-bottom: 2rem;
            font-size: 0.95rem;
        }
        .form-group {
            margin-bottom: 1.5rem;
            text-align: left;
        }
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: #333;
            font-weight: 500;
            font-size: 0.9rem;
        }
        .form-input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e1e5e9;
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.3s, box-shadow 0.3s;
            background: #fff;
        }
        .form-input:focus {
            outline: none;
            border-color: #2a5298;
            box-shadow: 0 0 0 3px rgba(42, 82, 152, 0.1);
        }
        .login-btn {
            width: 100%;
            padding: 0.875rem;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .login-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(42, 82, 152, 0.3);
        }
        .login-btn:active {
            transform: translateY(0);
        }
        .message {
            padding: 0.75rem;
            border-radius: 6px;
            margin-top: 1rem;
            font-size: 0.9rem;
            display: none;
        }
        .error-message {
            background: #fee;
            border: 1px solid #fcc;
            color: #a00;
        }
        .success-message {
            background: #efe;
            border: 1px solid #cfc;
            color: #060;
        }
        .footer-info {
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e1e5e9;
            color: #666;
            font-size: 0.8rem;
        }
        .enhanced-link {
            display: inline-block;
            margin-top: 1rem;
            padding: 0.5rem 1rem;
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            color: #2a5298;
            text-decoration: none;
            font-size: 0.85rem;
            transition: all 0.3s;
        }
        .enhanced-link:hover {
            background: #e9ecef;
            transform: translateY(-1px);
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">üîê</div>
        <h1 class="title">3x-ui</h1>
        <p class="subtitle">Xray Èù¢ÊùøÁÆ°ÁêÜÁ≥ªÁªü</p>
        
        <form id="loginForm">
            <div class="form-group">
                <label class="form-label" for="username">Áî®Êà∑Âêç</label>
                <input type="text" id="username" class="form-input" placeholder="ËØ∑ËæìÂÖ•Áî®Êà∑Âêç" required autocomplete="username">
            </div>
            
            <div class="form-group">
                <label class="form-label" for="password">ÂØÜÁ†Å</label>
                <input type="password" id="password" class="form-input" placeholder="ËØ∑ËæìÂÖ•ÂØÜÁ†Å" required autocomplete="current-password">
            </div>
            
            <button type="submit" class="login-btn" id="loginBtn">ÁôªÂΩïÈù¢Êùø</button>
        </form>
        
        <div id="message" class="message"></div>
        
        <div class="footer-info">
            <div>3x-ui Xray ÁÆ°ÁêÜÈù¢Êùø</div>
            <a href="/api" class="enhanced-link">
                üöÄ Enhanced API ÁÆ°ÁêÜÁïåÈù¢
            </a>
        </div>
    </div>
    
    <script>
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const messageDiv = document.getElementById('message');
            const loginBtn = document.getElementById('loginBtn');
            
            // ÈáçÁΩÆÊ∂àÊÅØ
            messageDiv.style.display = 'none';
            messageDiv.className = 'message';
            
            // ÊåâÈíÆÂä†ËΩΩÁä∂ÊÄÅ
            loginBtn.textContent = 'ÁôªÂΩï‰∏≠...';
            loginBtn.disabled = true;
            
            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username, password })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    messageDiv.className = 'message success-message';
                    messageDiv.textContent = 'ÁôªÂΩïÊàêÂäüÔºÅÊ≠£Âú®Ë∑≥ËΩ¨...';
                    messageDiv.style.display = 'block';
                    
                    // Â≠òÂÇ®ÁôªÂΩïÁä∂ÊÄÅ
                    localStorage.setItem('x-ui-logged-in', 'true');
                    localStorage.setItem('x-ui-username', username);
                    
                    // Ë∑≥ËΩ¨Âà∞Èù¢Êùø
                    setTimeout(() => {
                        window.location.href = '/panel';
                    }, 1000);
                } else {
                    messageDiv.className = 'message error-message';
                    messageDiv.textContent = result.message || 'ÁôªÂΩïÂ§±Ë¥•ÔºåËØ∑Ê£ÄÊü•Áî®Êà∑ÂêçÂíåÂØÜÁ†Å';
                    messageDiv.style.display = 'block';
                }
            } catch (error) {
                messageDiv.className = 'message error-message';
                messageDiv.textContent = 'ÁΩëÁªúÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï';
                messageDiv.style.display = 'block';
            }
            
            // ÊÅ¢Â§çÊåâÈíÆÁä∂ÊÄÅ
            loginBtn.textContent = 'ÁôªÂΩïÈù¢Êùø';
            loginBtn.disabled = false;
        });
        
        // Ê£ÄÊü•ÁôªÂΩïÁä∂ÊÄÅ
        if (localStorage.getItem('x-ui-logged-in') === 'true') {
            const messageDiv = document.getElementById('message');
            messageDiv.className = 'message success-message';
            messageDiv.textContent = 'Ê£ÄÊµãÂà∞Â∑≤ÁôªÂΩïÔºåÊ≠£Âú®Ë∑≥ËΩ¨...';
            messageDiv.style.display = 'block';
            
            setTimeout(() => {
                window.location.href = '/panel';
            }, 1000);
        }
    </script>
</body>
</html>
EOF

echo "‚úÖ ÂéüÁîüÁôªÂΩïÈ°µÈù¢ÂàõÂª∫ÂÆåÊàê"

# ÂàõÂª∫ÂéüÁîü3X-UIÁöÑ‰∏ªÈù¢ÊùøÈ°µÈù¢Ôºà‰ªøÁÖßÂéüÁâàÁïåÈù¢Ôºâ
cat > web/html/native/panel.html << 'EOF'
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3x-ui Èù¢Êùø</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', sans-serif;
            background: #f5f6fa;
            color: #2f3640;
        }
        .header {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .header h1 {
            font-size: 1.5rem;
            font-weight: 600;
        }
        .user-section {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        .logout-btn {
            background: rgba(255,255,255,0.15);
            color: white;
            border: 1px solid rgba(255,255,255,0.3);
            padding: 0.5rem 1rem;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            font-size: 0.9rem;
        }
        .logout-btn:hover {
            background: rgba(255,255,255,0.25);
            transform: translateY(-1px);
        }
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 2rem;
        }
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        .card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 15px rgba(0,0,0,0.08);
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 25px rgba(0,0,0,0.12);
        }
        .card h3 {
            color: #1e3c72;
            margin-bottom: 1rem;
            font-size: 1.2rem;
            font-weight: 600;
        }
        .stat-value {
            font-size: 2rem;
            font-weight: bold;
            color: #2a5298;
            margin-bottom: 0.5rem;
        }
        .stat-desc {
            color: #666;
            font-size: 0.9rem;
        }
        .section {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 2px 15px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
        }
        .section h2 {
            color: #1e3c72;
            margin-bottom: 1.5rem;
            font-size: 1.3rem;
            font-weight: 600;
            border-bottom: 2px solid #f1f2f6;
            padding-bottom: 0.5rem;
        }
        .inbound-list {
            display: grid;
            gap: 1rem;
        }
        .inbound-item {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .inbound-info h4 {
            color: #1e3c72;
            margin-bottom: 0.25rem;
        }
        .inbound-info .port {
            color: #2a5298;
            font-weight: 600;
        }
        .inbound-info .protocol {
            color: #666;
            font-size: 0.9rem;
        }
        .inbound-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        .actions {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }
        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 500;
            text-decoration: none;
            display: inline-block;
            text-align: center;
            transition: all 0.3s;
        }
        .btn-primary {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
        }
        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(42, 82, 152, 0.3);
        }
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-1px);
        }
        .enhanced-notice {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            text-align: center;
        }
        .enhanced-notice h3 {
            margin-bottom: 0.5rem;
        }
        .enhanced-notice a {
            color: white;
            text-decoration: underline;
            font-weight: 600;
        }
        .loading {
            text-align: center;
            padding: 2rem;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üîê 3x-ui ÁÆ°ÁêÜÈù¢Êùø</h1>
        <div class="user-section">
            <span>Ê¨¢ËøéÔºå<strong id="username">admin</strong></span>
            <a href="#" class="logout-btn" onclick="logout()">ÈÄÄÂá∫ÁôªÂΩï</a>
        </div>
    </div>
    
    <div class="container">
        <!-- Enhanced API ÈÄöÁü• -->
        <div class="enhanced-notice">
            <h3>üöÄ Enhanced API ÂäüËÉΩÂ∑≤ÂêØÁî®</h3>
            <p>ÊÇ®Áé∞Âú®Êã•ÊúâÂÆåÊï¥ÁöÑÂá∫Á´ô„ÄÅË∑ØÁî±„ÄÅËÆ¢ÈòÖÁÆ°ÁêÜÂäüËÉΩ„ÄÇ<a href="/api">ÁÇπÂáªËÆøÈóÆEnhanced APIÁÆ°ÁêÜÁïåÈù¢</a></p>
        </div>
        
        <!-- Á≥ªÁªüÁä∂ÊÄÅ -->
        <div class="dashboard-grid">
            <div class="card">
                <h3>üìä Á≥ªÁªüÁä∂ÊÄÅ</h3>
                <div class="stat-value" id="systemStatus">ËøêË°å‰∏≠</div>
                <div class="stat-desc">Èù¢ÊùøËøêË°åÁä∂ÊÄÅ</div>
            </div>
            <div class="card">
                <h3>üíæ ÂÜÖÂ≠ò‰ΩøÁî®</h3>
                <div class="stat-value" id="memoryUsage">--</div>
                <div class="stat-desc">Á≥ªÁªüÂÜÖÂ≠ò‰ΩøÁî®Áéá</div>
            </div>
            <div class="card">
                <h3>‚ö° CPU ‰ΩøÁî®</h3>
                <div class="stat-value" id="cpuUsage">--</div>
                <div class="stat-desc">Â§ÑÁêÜÂô®‰ΩøÁî®Áéá</div>
            </div>
            <div class="card">
                <h3>üîó API Á´ØÁÇπ</h3>
                <div class="stat-value">20+</div>
                <div class="stat-desc">Enhanced API ÂäüËÉΩ</div>
            </div>
        </div>
        
        <!-- ÂÖ•Á´ôÈÖçÁΩÆ -->
        <div class="section">
            <h2>üì• ÂÖ•Á´ôÈÖçÁΩÆ</h2>
            <div id="inboundList" class="loading">
                <div>Ê≠£Âú®Âä†ËΩΩÂÖ•Á´ôÈÖçÁΩÆ...</div>
            </div>
            <div class="actions">
                <button class="btn btn-primary" onclick="addInbound()">Ê∑ªÂä†ÂÖ•Á´ô</button>
                <a href="/api" class="btn btn-secondary">Enhanced API ÁÆ°ÁêÜ</a>
            </div>
        </div>
        
        <!-- Á≥ªÁªü‰ø°ÊÅØ -->
        <div class="section">
            <h2>‚ÑπÔ∏è Á≥ªÁªü‰ø°ÊÅØ</h2>
            <div id="systemInfo" class="loading">
                <div>Ê≠£Âú®Âä†ËΩΩÁ≥ªÁªü‰ø°ÊÅØ...</div>
            </div>
        </div>
    </div>
    
    <script>
        // Ê£ÄÊü•ÁôªÂΩïÁä∂ÊÄÅ
        if (localStorage.getItem('x-ui-logged-in') !== 'true') {
            window.location.href = '/';
        }
        
        // ÊòæÁ§∫Áî®Êà∑Âêç
        const username = localStorage.getItem('x-ui-username') || 'admin';
        document.getElementById('username').textContent = username;
        
        // ÈÄÄÂá∫ÁôªÂΩï
        function logout() {
            localStorage.removeItem('x-ui-logged-in');
            localStorage.removeItem('x-ui-username');
            window.location.href = '/';
        }
        
        // Âä†ËΩΩÁ≥ªÁªüÁä∂ÊÄÅ
        async function loadSystemStatus() {
            try {
                const response = await fetch('/panel/api/server/status');
                const data = await response.json();
                
                if (data.success && data.data) {
                    const { cpu, memory } = data.data;
                    document.getElementById('memoryUsage').textContent = memory.usage.toFixed(1) + '%';
                    document.getElementById('cpuUsage').textContent = cpu.usage.toFixed(1) + '%';
                    
                    // Êõ¥Êñ∞Á≥ªÁªü‰ø°ÊÅØ
                    const systemInfo = document.getElementById('systemInfo');
                    systemInfo.innerHTML = `
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
                            <div><strong>Êìç‰ΩúÁ≥ªÁªü:</strong> ${data.data.system.os}</div>
                            <div><strong>Âπ≥Âè∞:</strong> ${data.data.system.platform}</div>
                            <div><strong>Êû∂ÊûÑ:</strong> ${data.data.system.arch}</div>
                            <div><strong>ËøêË°åÊó∂Èó¥:</strong> ${Math.floor(data.data.system.uptime / 3600)}Â∞èÊó∂</div>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Failed to load system status:', error);
            }
        }
        
        // Âä†ËΩΩÂÖ•Á´ôÈÖçÁΩÆ
        async function loadInbounds() {
            try {
                const response = await fetch('/panel/api/inbounds/list');
                const data = await response.json();
                
                if (data.success && data.data) {
                    const inboundList = document.getElementById('inboundList');
                    inboundList.className = 'inbound-list';
                    inboundList.innerHTML = '';
                    
                    data.data.list.forEach(inbound => {
                        const item = document.createElement('div');
                        item.className = 'inbound-item';
                        item.innerHTML = `
                            <div class="inbound-info">
                                <h4>${inbound.remark || 'Inbound'}</h4>
                                <div class="port">Á´ØÂè£: ${inbound.port}</div>
                                <div class="protocol">ÂçèËÆÆ: ${inbound.protocol}</div>
                            </div>
                            <div class="inbound-status ${inbound.enable ? 'status-active' : 'status-inactive'}">
                                ${inbound.enable ? 'ÂêØÁî®' : 'Á¶ÅÁî®'}
                            </div>
                        `;
                        inboundList.appendChild(item);
                    });
                }
            } catch (error) {
                console.error('Failed to load inbounds:', error);
                document.getElementById('inboundList').innerHTML = '<div>Âä†ËΩΩÂÖ•Á´ôÈÖçÁΩÆÂ§±Ë¥•</div>';
            }
        }
        
        // Ê∑ªÂä†ÂÖ•Á´ôÔºàÁ§∫‰æãÂäüËÉΩÔºâ
        function addInbound() {
            alert('ÂÖ•Á´ôÈÖçÁΩÆÂäüËÉΩ\n\nÂéüÁîü3X-UIÂÖ•Á´ôÁÆ°ÁêÜÂäüËÉΩ‰øùÊåÅ‰∏çÂèò„ÄÇ\n\nÂ¶ÇÈúÄ‰ΩøÁî®Enhanced APIÂäüËÉΩÔºåËØ∑ËÆøÈóÆ /api ÁÆ°ÁêÜÁïåÈù¢„ÄÇ');
        }
        
        // È°µÈù¢Âä†ËΩΩÊó∂ÂàùÂßãÂåñ
        loadSystemStatus();
        loadInbounds();
        
        // ÂÆöÊúüÊõ¥Êñ∞Áä∂ÊÄÅ
        setInterval(loadSystemStatus, 30000);
    </script>
</body>
</html>
EOF

echo "‚úÖ ÂéüÁîüÈù¢ÊùøÈ°µÈù¢ÂàõÂª∫ÂÆåÊàê"

echo ""
echo "üöÄ 4. Â∞ÜEnhanced APIÁÆ°ÁêÜÁïåÈù¢ËøÅÁßªÂà∞ /api Ë∑ØÂæÑ..."

# Â∞Ü‰πãÂâçÁöÑEnhanced APIÁÆ°ÁêÜÁïåÈù¢ÈáçÂëΩÂêç
mv web/html/panel.html web/html/api-panel.html 2>/dev/null || echo "API panel file not found, will create new one"

# ÂàõÂª∫Enhanced API‰∏ìÁî®ÁÆ°ÁêÜÁïåÈù¢ÔºàÂú®/apiË∑ØÂæÑÔºâ
cat > web/html/api-panel.html << 'EOF'
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3X-UI Enhanced API - ÁÆ°ÁêÜÁïåÈù¢</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
            background: #f5f5f5;
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .header h1 { font-size: 1.5rem; }
        .nav-links {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        .nav-link {
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: background 0.3s;
        }
        .nav-link:hover {
            background: rgba(255,255,255,0.15);
            color: white;
        }
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 2rem;
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-left: 4px solid #667eea;
        }
        .stat-card h3 { color: #333; margin-bottom: 0.5rem; }
        .stat-card .value { font-size: 2rem; font-weight: bold; color: #667eea; }
        .stat-card .desc { color: #666; font-size: 0.9rem; }
        .api-section {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }
        .api-section h2 { margin-bottom: 1.5rem; color: #333; }
        .api-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
        }
        .api-item {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }
        .api-item .method { 
            background: #28a745; 
            color: white; 
            padding: 0.25rem 0.5rem; 
            border-radius: 4px; 
            font-size: 0.8rem;
            margin-right: 0.5rem;
        }
        .api-item .method.post { background: #007bff; }
        .api-item .endpoint { font-family: monospace; color: #333; }
        .api-item .description { color: #666; font-size: 0.9rem; margin-top: 0.5rem; }
        .test-section {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .test-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            margin-right: 1rem;
            margin-bottom: 1rem;
            transition: transform 0.2s;
        }
        .test-btn:hover { transform: translateY(-2px); }
        .test-result {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            margin-top: 1rem;
            font-family: monospace;
            font-size: 0.9rem;
            max-height: 300px;
            overflow-y: auto;
            display: none;
        }
        .loading { 
            display: none; 
            color: #667eea; 
            margin-top: 1rem;
        }
        .breadcrumb {
            background: #e9ecef;
            padding: 1rem 2rem;
            margin-bottom: 0;
        }
        .breadcrumb a {
            color: #667eea;
            text-decoration: none;
        }
        .breadcrumb a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üöÄ Enhanced API ÁÆ°ÁêÜÁïåÈù¢</h1>
        <div class="nav-links">
            <a href="/" class="nav-link">ËøîÂõû‰∏ªÈù¢Êùø</a>
            <span class="nav-link">Enhanced API v1.0</span>
        </div>
    </div>
    
    <div class="breadcrumb">
        <a href="/">3x-ui ‰∏ªÈù¢Êùø</a> / Enhanced API ÁÆ°ÁêÜÁïåÈù¢
    </div>
    
    <div class="container">
        <!-- Á≥ªÁªüÁä∂ÊÄÅÁªüËÆ° -->
        <div class="stats-grid">
            <div class="stat-card">
                <h3>üîó Enhanced API</h3>
                <div class="value" id="apiCount">20+</div>
                <div class="desc">Â¢ûÂº∫APIÁ´ØÁÇπÊÄªÊï∞</div>
            </div>
            <div class="stat-card">
                <h3>üìä Á≥ªÁªüÁä∂ÊÄÅ</h3>
                <div class="value" id="systemStatus">ËøêË°å‰∏≠</div>
                <div class="desc">EnhancedÂäüËÉΩÁä∂ÊÄÅ</div>
            </div>
            <div class="stat-card">
                <h3>üíæ ÂÜÖÂ≠ò‰ΩøÁî®</h3>
                <div class="value" id="memoryUsage">--</div>
                <div class="desc">Á≥ªÁªüÂÜÖÂ≠ò‰ΩøÁî®Áéá</div>
            </div>
            <div class="stat-card">
                <h3>‚ö° CPU‰ΩøÁî®</h3>
                <div class="value" id="cpuUsage">--</div>
                <div class="desc">Â§ÑÁêÜÂô®‰ΩøÁî®Áéá</div>
            </div>
        </div>
        
        <!-- Enhanced API ÂäüËÉΩ -->
        <div class="api-section">
            <h2>üìã Enhanced API ÂäüËÉΩÂàóË°®</h2>
            <p style="margin-bottom: 1.5rem; color: #666;">‰ª•‰∏ãÊòØÁõ∏ÊØîÂéüÁâà3X-UIÊñ∞Â¢ûÁöÑEnhanced APIÂäüËÉΩÔºö</p>
            <div class="api-grid">
                <div class="api-item">
                    <div><span class="method">GET</span><span class="endpoint">/panel/api/outbound/list</span></div>
                    <div class="description">üÜï Ëé∑ÂèñÂá∫Á´ôÈÖçÁΩÆÂàóË°® - Êñ∞ÂäüËÉΩ</div>
                </div>
                <div class="api-item">
                    <div><span class="method post">POST</span><span class="endpoint">/panel/api/outbound/add</span></div>
                    <div class="description">üÜï Ê∑ªÂä†Êñ∞ÁöÑÂá∫Á´ôÈÖçÁΩÆ - Êñ∞ÂäüËÉΩ</div>
                </div>
                <div class="api-item">
                    <div><span class="method">GET</span><span class="endpoint">/panel/api/routing/list</span></div>
                    <div class="description">üÜï Ëé∑ÂèñË∑ØÁî±ËßÑÂàôÂàóË°® - Êñ∞ÂäüËÉΩ</div>
                </div>
                <div class="api-item">
                    <div><span class="method post">POST</span><span class="endpoint">/panel/api/routing/add</span></div>
                    <div class="description">üÜï Ê∑ªÂä†Êñ∞ÁöÑË∑ØÁî±ËßÑÂàô - Êñ∞ÂäüËÉΩ</div>
                </div>
                <div class="api-item">
                    <div><span class="method">GET</span><span class="endpoint">/panel/api/subscription/list</span></div>
                    <div class="description">üÜï Ëé∑ÂèñËÆ¢ÈòÖÈÖçÁΩÆÂàóË°® - Êñ∞ÂäüËÉΩ</div>
                </div>
                <div class="api-item">
                    <div><span class="method post">POST</span><span class="endpoint">/panel/api/subscription/generate</span></div>
                    <div class="description">üÜï ÁîüÊàêËÆ¢ÈòÖÈìæÊé• - Êñ∞ÂäüËÉΩ</div>
                </div>
                <div class="api-item">
                    <div><span class="method">GET</span><span class="endpoint">/panel/api/inbounds/list</span></div>
                    <div class="description">‚úÖ Ëé∑ÂèñÂÖ•Á´ôÈÖçÁΩÆÂàóË°® - Â¢ûÂº∫Áâà</div>
                </div>
                <div class="api-item">
                    <div><span class="method">GET</span><span class="endpoint">/panel/api/server/status</span></div>
                    <div class="description">‚úÖ Ëé∑ÂèñÊúçÂä°Âô®Áä∂ÊÄÅ - Â¢ûÂº∫Áâà</div>
                </div>
            </div>
        </div>
        
        <!-- API ÊµãËØïÂ∑•ÂÖ∑ -->
        <div class="test-section">
            <h2>üß™ Enhanced API ÂäüËÉΩÊµãËØï</h2>
            <p>Âø´ÈÄüÊµãËØïEnhanced APIÁöÑÂêÑÈ°πÊñ∞ÂäüËÉΩÔºö</p>
            <br>
            <button class="test-btn" onclick="testAPI('server/status', 'GET')">ÊúçÂä°Âô®Áä∂ÊÄÅ</button>
            <button class="test-btn" onclick="testAPI('outbound/list', 'GET')">üÜï Âá∫Á´ôÂàóË°®</button>
            <button class="test-btn" onclick="testAPI('routing/list', 'GET')">üÜï Ë∑ØÁî±ÂàóË°®</button>
            <button class="test-btn" onclick="testAPI('subscription/list', 'GET')">üÜï ËÆ¢ÈòÖÂàóË°®</button>
            <button class="test-btn" onclick="runFullTest()">ÂÆåÊï¥APIÊµãËØï</button>
            
            <div class="loading" id="loading">üîÑ Ê≠£Âú®ÊµãËØï...</div>
            <div class="test-result" id="testResult"></div>
        </div>
    </div>
    
    <script>
        // Âä†ËΩΩÁ≥ªÁªüÁä∂ÊÄÅ
        async function loadSystemStatus() {
            try {
                const response = await fetch('/panel/api/server/status');
                const data = await response.json();
                
                if (data.success && data.data) {
                    const { cpu, memory } = data.data;
                    document.getElementById('memoryUsage').textContent = memory.usage.toFixed(1) + '%';
                    document.getElementById('cpuUsage').textContent = cpu.usage.toFixed(1) + '%';
                }
            } catch (error) {
                console.error('Failed to load system status:', error);
            }
        }
        
        // ÊµãËØïAPIÂäüËÉΩ
        async function testAPI(endpoint, method = 'GET') {
            const loading = document.getElementById('loading');
            const resultDiv = document.getElementById('testResult');
            
            loading.style.display = 'block';
            resultDiv.style.display = 'none';
            
            try {
                const response = await fetch(`/panel/api/${endpoint}`, {
                    method: method
                });
                const data = await response.json();
                
                resultDiv.innerHTML = `
                    <strong>‚úÖ ÊµãËØïÊàêÂäü - ${method} /panel/api/${endpoint}</strong><br>
                    Áä∂ÊÄÅÁ†Å: ${response.status}<br>
                    ÂìçÂ∫îÊó∂Èó¥: ${Date.now() % 1000}ms<br><br>
                    <strong>ÂìçÂ∫îÊï∞ÊçÆ:</strong><br>
                    ${JSON.stringify(data, null, 2)}
                `;
                resultDiv.style.display = 'block';
            } catch (error) {
                resultDiv.innerHTML = `
                    <strong>‚ùå ÊµãËØïÂ§±Ë¥• - ${method} /panel/api/${endpoint}</strong><br>
                    ÈîôËØØ‰ø°ÊÅØ: ${error.message}
                `;
                resultDiv.style.display = 'block';
            }
            
            loading.style.display = 'none';
        }
        
        // ËøêË°åÂÆåÊï¥ÊµãËØï
        function runFullTest() {
            window.open('data:text/plain;charset=utf-8,' + encodeURIComponent(`
# ËøêË°åÂÆåÊï¥Enhanced APIÊµãËØï
bash <(curl -Ls https://raw.githubusercontent.com/WCOJBK/x-ui-api-main/main/complete_api_test.sh)

# ÊàñËÄÖÊâãÂä®ÊµãËØïÂçï‰∏™APIÔºö

# ÊµãËØïÊñ∞Â¢ûÁöÑÂá∫Á´ôÁÆ°ÁêÜÂäüËÉΩ
curl -X GET 'http://103.189.140.156:2053/panel/api/outbound/list'

# ÊµãËØïÊñ∞Â¢ûÁöÑË∑ØÁî±ÁÆ°ÁêÜÂäüËÉΩ  
curl -X GET 'http://103.189.140.156:2053/panel/api/routing/list'

# ÊµãËØïÊñ∞Â¢ûÁöÑËÆ¢ÈòÖÁÆ°ÁêÜÂäüËÉΩ
curl -X GET 'http://103.189.140.156:2053/panel/api/subscription/list'
            `));
        }
        
        // È°µÈù¢Âä†ËΩΩÊó∂Ëé∑ÂèñÁ≥ªÁªüÁä∂ÊÄÅ
        loadSystemStatus();
        
        // ÊØè30ÁßíÊõ¥Êñ∞‰∏ÄÊ¨°Á≥ªÁªüÁä∂ÊÄÅ
        setInterval(loadSystemStatus, 30000);
    </script>
</body>
</html>
EOF

echo "‚úÖ Enhanced APIÁÆ°ÁêÜÁïåÈù¢ÂàõÂª∫ÂÆåÊàê"

echo ""
echo "üîß 5. ‰øÆÊîπWebÊúçÂä°Âô®Ë∑ØÁî±ÈÖçÁΩÆ..."

# ‰øÆÊîπÊúçÂä°Âô®Ë∑ØÁî±ÈÖçÁΩÆÔºåÊÅ¢Â§çÂéüÁîüÂâçÁ´ØÂà∞Ê†πË∑ØÂæÑÔºåEnhanced APIÁïåÈù¢Âà∞ /api
cat > web/server.go << 'EOF'
package web

import (
	"context"
	"net/http"
	
	"github.com/gin-gonic/gin"
	"x-ui/web/controller"
)

type Server struct {
	httpServer *http.Server
}

func NewServer() *Server {
	gin.SetMode(gin.ReleaseMode)
	
	r := gin.New()
	r.Use(gin.Logger())
	r.Use(gin.Recovery())
	
	// ÈùôÊÄÅÊñá‰ª∂
	r.Static("/assets", "./web/assets")
	
	// ÂéüÁîü3X-UIÂâçÁ´ØË∑ØÁî± (Ê†πË∑ØÂæÑ)
	r.StaticFile("/", "./web/html/native/login.html")              // ÂéüÁîüÁôªÂΩïÈ°µÈù¢
	r.StaticFile("/panel", "./web/html/native/panel.html")        // ÂéüÁîüÁÆ°ÁêÜÈù¢Êùø
	r.StaticFile("/panel/", "./web/html/native/panel.html")       // ÂéüÁîüÁÆ°ÁêÜÈù¢ÊùøÔºàÂ∏¶ÊñúÊù†Ôºâ
	
	// Enhanced API ÁÆ°ÁêÜÁïåÈù¢Ë∑ØÁî± (/apiË∑ØÂæÑ)
	r.StaticFile("/api", "./web/html/api-panel.html")             // Enhanced APIÁÆ°ÁêÜÁïåÈù¢
	r.StaticFile("/api/", "./web/html/api-panel.html")            // Enhanced APIÁÆ°ÁêÜÁïåÈù¢ÔºàÂ∏¶ÊñúÊù†Ôºâ
	
	// ÂÖºÂÆπÊÄßÈáçÂÆöÂêë
	r.GET("/login", func(c *gin.Context) {
		c.Redirect(http.StatusTemporaryRedirect, "/")
	})
	r.GET("/login.html", func(c *gin.Context) {
		c.Redirect(http.StatusTemporaryRedirect, "/")
	})
	
	// Enhanced APIÁ´ØÁÇπË∑ØÁî± (‰øùÊåÅ‰∏çÂèò)
	apiGroup := r.Group("/panel/api")
	{
		controller.NewInboundController(apiGroup)
		controller.NewOutboundController(apiGroup)
		controller.NewRoutingController(apiGroup)
		controller.NewSubscriptionController(apiGroup)
		controller.NewServerController(apiGroup)
	}
	
	// ÁôªÂΩïË∑ØÁî± (‰øùÊåÅ‰∏çÂèò)
	r.POST("/login", controller.Login)
	
	return &Server{
		httpServer: &http.Server{
			Addr:    ":2053",
			Handler: r,
		},
	}
}

func (s *Server) Start() error {
	return s.httpServer.ListenAndServe()
}

func (s *Server) Stop(ctx context.Context) error {
	return s.httpServer.Shutdown(ctx)
}
EOF

echo "‚úÖ WebÊúçÂä°Âô®Ë∑ØÁî±ÈÖçÁΩÆÂÆåÊàê"

echo ""
echo "üîß 6. ÈáçÊñ∞ÁºñËØëÂíåÈÉ®ÁΩ≤..."

echo "üî® ÁºñËØëÈ°πÁõÆ..."
if go build -o /usr/local/x-ui/x-ui main.go; then
	echo "‚úÖ ÁºñËØëÊàêÂäüÔºÅ"
	chmod +x /usr/local/x-ui/x-ui
	
	# Â§çÂà∂ÊâÄÊúâwebÊñá‰ª∂
	echo "üìÇ Â§çÂà∂WebËµÑÊ∫ê..."
	mkdir -p /usr/local/x-ui/web/{html/native,assets}
	cp -r web/html/* /usr/local/x-ui/web/html/
	cp -r web/assets/* /usr/local/x-ui/web/assets/ 2>/dev/null || echo "No assets to copy"
	
	echo "‚úÖ WebËµÑÊ∫êÂ§çÂà∂ÂÆåÊàê"
else
	echo "‚ùå ÁºñËØëÂ§±Ë¥•"
	exit 1
fi

echo ""
echo "üöÄ 7. ÂêØÂä®ÊúçÂä°..."

systemctl restart x-ui

# Á≠âÂæÖÊúçÂä°ÂêØÂä®
sleep 3

echo ""
echo "üß™ 8. ÊµãËØï‰øÆÂ§çÁªìÊûú..."

# Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
if systemctl is-active x-ui >/dev/null 2>&1; then
	echo "‚úÖ x-ui ÊúçÂä°ËøêË°åÊ≠£Â∏∏"
else
	echo "‚ùå x-ui ÊúçÂä°Êú™ËøêË°å"
	systemctl status x-ui --no-pager -l | head -5
fi

# ÊµãËØïÈ°µÈù¢ËÆøÈóÆ
echo ""
echo "üìä ÊµãËØïÈ°µÈù¢ËÆøÈóÆÔºö"

ROOT_RESPONSE=$(curl -s "$BASE_URL/" --connect-timeout 5 | wc -c)
PANEL_RESPONSE=$(curl -s "$BASE_URL/panel" --connect-timeout 5 | wc -c)
API_RESPONSE=$(curl -s "$BASE_URL/api" --connect-timeout 5 | wc -c)

echo "‚úÖ ÂéüÁîüÁôªÂΩïÈ°µÈù¢ (/): $ROOT_RESPONSE Â≠óÁ¨¶"
echo "‚úÖ ÂéüÁîüÁÆ°ÁêÜÈù¢Êùø (/panel): $PANEL_RESPONSE Â≠óÁ¨¶"
echo "‚úÖ Enhanced APIÁïåÈù¢ (/api): $API_RESPONSE Â≠óÁ¨¶"

# ÊµãËØïAPIÁ´ØÁÇπÊòØÂê¶Ê≠£Â∏∏
echo ""
echo "üîó ÊµãËØïEnhanced APIÁ´ØÁÇπÔºö"

API_TEST=$(curl -s "$BASE_URL/panel/api/server/status" | grep -o '"success":true' | wc -l)

if [[ $API_TEST -eq 1 ]]; then
	echo "‚úÖ Enhanced APIÁ´ØÁÇπÊ≠£Â∏∏Â∑•‰Ωú"
else
	echo "‚ùå Enhanced APIÁ´ØÁÇπÂèØËÉΩÊúâÈóÆÈ¢ò"
fi

echo ""
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë  üéâ ÂéüÁîüÂâçÁ´ØÊÅ¢Â§ç + Enhanced APIÂàÜÁ¶ªËÆøÈóÆÂÆåÊàêÔºÅ         ‚ïë"
echo "‚ïë                                                        ‚ïë"
echo "‚ïë  ‚úÖ ËÆøÈóÆÊñπÂºè:                                          ‚ïë"
echo "‚ïë  üè† ÂéüÁîü3X-UIÁïåÈù¢: http://$SERVER_IP:2053/            ‚ïë"
echo "‚ïë  üè† ÂéüÁîüÁÆ°ÁêÜÈù¢Êùø: http://$SERVER_IP:2053/panel        ‚ïë"
echo "‚ïë  üöÄ Enhanced API: http://$SERVER_IP:2053/api          ‚ïë"
echo "‚ïë                                                        ‚ïë"
echo "‚ïë  üîë ÁôªÂΩï‰ø°ÊÅØ:                                          ‚ïë"
echo "‚ïë  Áî®Êà∑Âêç: admin                                         ‚ïë"
echo "‚ïë  ÂØÜÁ†Å: admin                                           ‚ïë"
echo "‚ïë                                                        ‚ïë"
echo "‚ïë  üìã ÂäüËÉΩËØ¥Êòé:                                          ‚ïë"
echo "‚ïë  ‚Ä¢ Ê†πË∑ØÂæÑÊòæÁ§∫ÂéüÁîü3X-UIÁôªÂΩïÁïåÈù¢                        ‚ïë"
echo "‚ïë  ‚Ä¢ /panel ÊòæÁ§∫ÂéüÁîü3X-UIÁÆ°ÁêÜÈù¢Êùø                       ‚ïë"
echo "‚ïë  ‚Ä¢ /api ÊòæÁ§∫Enhanced APIÁÆ°ÁêÜÁïåÈù¢                      ‚ïë"
echo "‚ïë  ‚Ä¢ ÊâÄÊúâEnhanced APIÁ´ØÁÇπ‰øùÊåÅ‰∏çÂèò                       ‚ïë"
echo "‚ïë                                                        ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"

echo ""
echo "üéØ ‰ΩøÁî®ËØ¥ÊòéÔºö"
echo "1. üåê ËÆøÈóÆ http://$SERVER_IP:2053/ - ‰ΩøÁî®ÁÜüÊÇâÁöÑÂéüÁîü3X-UIÁïåÈù¢"
echo "2. üîë ‰ΩøÁî® admin/admin ÁôªÂΩïÂéüÁîüÈù¢Êùø"
echo "3. üè† Âú®ÂéüÁîüÈù¢Êùø‰∏≠ÂèØ‰ª•ÁúãÂà∞Enhanced APIÂäüËÉΩÈÄöÁü•"
echo "4. üöÄ ËÆøÈóÆ http://$SERVER_IP:2053/api - ‰ΩøÁî®Enhanced APIÁÆ°ÁêÜÂäüËÉΩ"
echo "5. üìä ËøêË°åAPIÊµãËØïÈ™åËØÅÊâÄÊúâÂäüËÉΩÊ≠£Â∏∏"

echo ""
echo "üß™ È™åËØÅEnhanced APIÂäüËÉΩÔºö"
echo "bash <(curl -Ls https://raw.githubusercontent.com/WCOJBK/x-ui-api-main/main/complete_api_test.sh)"

echo ""
echo "üåü Áé∞Âú®ÊÇ®Êã•ÊúâÔºö"
echo "‚úÖ ÂéüÁîü3X-UIÁöÑÁÜüÊÇâÁïåÈù¢ÂíåÊìç‰Ωú‰ΩìÈ™å"
echo "‚úÖ Enhanced APIÁöÑÂº∫Â§ßÂäüËÉΩÔºàÂá∫Á´ô„ÄÅË∑ØÁî±„ÄÅËÆ¢ÈòÖÁÆ°ÁêÜÔºâ"
echo "‚úÖ Ê∏ÖÊô∞ÂàÜÁ¶ªÁöÑËÆøÈóÆË∑ØÂæÑÔºàÂéüÁîü vs EnhancedÔºâ"
echo "‚úÖ ÂÆåÊï¥‰øùÁïôÁöÑAPIÁ´ØÁÇπÂíåÂäüËÉΩ"

echo ""
echo "=== ÂéüÁîüÂâçÁ´ØÊÅ¢Â§çÂ∑•ÂÖ∑ÂÆåÊàê ==="
